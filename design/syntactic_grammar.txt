program = { declaration } EOF ;

declaration = function_decl
            | variable_decl ;

function_decl = "let" IDENT arguments block ;

variable_decl = "let" IDENT [ "be" expression ] ;

expression = if_expr
           | print_stmt
           | block
           | assignment ;

if_expr = "if" expression block ;

block = "do" { assignment } ( "end" | "else" assignment ) ;

assignment = IDENT "be" assignment 
           | logic_or ;

logic_or = logic_and { "or" logic_and } ;
logic_and = equality { "and" equality } ;
equality = comparison { "is" [ "not" ] comparison } ;
comparison = term { [ "not" ] ( "gt" | "lt" ) term } ;
term = factor { ( "tm" | "dv" ) term } ;
factor = unary { ( "pl" | "mn" ) unary } ;

unary = ( "not" | "mn" ) unary | call ;
call = primary { "into" call } 
     | IDENT arguments ;
primary = IDENT 
        | STRING 
        | NUMBER 
        | "true" 
        | "false" 
        | "nil" 
        | block ;

parameters = "for" ( "nil" | IDENT { "," IDENT } "end" ) ; 
arguments = "for" ( "nil" | expression { "," expression } "end" ) ;
